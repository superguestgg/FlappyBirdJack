function Bird.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 10
pop this 2
push constant 30
pop this 3
push argument 0
pop this 4
push constant 5
pop this 5
push constant 0
not
pop this 6
push constant 1
pop this 7
push pointer 0
return
function Bird.getX 0
push argument 0
pop pointer 0
push this 3
return
function Bird.getY 0
push argument 0
pop pointer 0
push this 4
return
function Bird.getRadius 0
push argument 0
pop pointer 0
push this 5
return
function Bird.turn 1
push argument 0
pop pointer 0
call Keyboard.keyPressed 0
pop local 0
push local 0
push constant 32
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bird.jump 1
pop temp 0
label IF_FALSE0
push pointer 0
push argument 1
call Bird.gravitation 2
pop temp 0
push pointer 0
call Bird.checkCoordinate 1
pop temp 0
push constant 0
return
function Bird.getAlive 0
push argument 0
pop pointer 0
push argument 1
push pointer 0
call Pipe.isCollidingWith 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 6
label IF_FALSE0
push this 4
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 6
label IF_FALSE1
push this 4
push constant 255
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 6
label IF_FALSE2
push this 6
return
function Bird.drawWing 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 3
push constant 2
push this 5
call Math.multiply 2
sub
push this 4
push argument 1
add
push this 3
push this 4
push argument 1
add
push this 5
push constant 2
call Math.divide 2
add
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Bird.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 3
push this 4
push this 5
call Screen.drawCircle 3
pop temp 0
push this 7
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
call Bird.drawWing 2
pop temp 0
label IF_FALSE0
push this 7
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 2
neg
call Bird.drawWing 2
pop temp 0
label IF_FALSE1
push this 7
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 7
push pointer 0
push constant 4
neg
call Bird.drawWing 2
pop temp 0
label IF_FALSE2
push this 7
push constant 1
add
pop this 7
push constant 0
return
function Bird.jump 0
push argument 0
pop pointer 0
push constant 20
neg
pop this 1
push constant 0
return
function Bird.gravitation 0
push argument 0
pop pointer 0
push this 4
push argument 1
push this 1
call Math.multiply 2
push constant 50
call Math.divide 2
add
pop this 4
push this 1
push this 2
push argument 1
call Math.multiply 2
push constant 50
call Math.divide 2
add
pop this 1
push constant 0
return
function Bird.checkCoordinate 0
push argument 0
pop pointer 0
push this 4
push constant 255
push this 5
sub
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 255
push this 5
sub
pop this 4
label IF_FALSE0
push this 4
push constant 5
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 5
push constant 5
add
pop this 4
label IF_FALSE1
push constant 0
return
function Bird.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
